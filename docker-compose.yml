services:
  db:
    image: postgres:16-alpine
    container_name: linkvault-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - linkvault-network

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: linkvault-api
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    networks:
      - linkvault-network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: linkvault-web
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "5173:80"
    depends_on:
      - api
    networks:
      - linkvault-network
    restart: unless-stopped

volumes:
  pgdata: {}

networks:
  linkvault-network:
    driver: bridge
